/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RECEPTIONIST;

import DB.Connector;
import static RECEPTIONIST.AddReceptionist.dob;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author surap
 */
public class Choose_Patient extends javax.swing.JFrame {

    PreparedStatement ps = null;
    ResultSet rs = null;
    Connection connection = null;
    int flag = 0;
    static Statement st;

    static String sql;

    String dName;
    String droom;
    DefaultTableModel defaultTableModel = new DefaultTableModel();

    /**
     * Creates new form Choose_Patient
     */
    public Choose_Patient() {
        initComponents();
        Object columns[] = {"Tanggal", "id_pasien", "Nama_Pasien", "Usia", "Jenis_Kelamin", "Alamat", "Nomor_Telepon", "Penyakit"};
        defaultTableModel.setColumnIdentifiers(columns);
        tblPasien.setModel(defaultTableModel);
        JTextFieldDateEditor jd;
        jd = (JTextFieldDateEditor) jDateChooser.getDateEditor();
        jd.setEditable(false);
        jd.setBackground(Color.WHITE);
        loadtable();
        tblPasien.getTableHeader().setDefaultRenderer(new HeaderColor());
        TextPrompt cari = new TextPrompt("Berdasarkan Nama", txtcari);

        jPanel1.setFocusable(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPasien = new javax.swing.JTable();
        txtcari = new javax.swing.JTextField();
        btncari = new javax.swing.JButton();
        btnok = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(246, 255, 233));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setkEndColor(new java.awt.Color(204, 255, 204));
        kGradientPanel1.setkGradientFocus(1000);
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 102, 102));

        tblPasien = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colndex) {
                return false;
            }
        };
        tblPasien.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tblPasien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Pasien", "Nama Pasien", "Jenis Kelamin", "Usia", "Alamat", "Nomor Telepon", "Penyakit", "Tanggal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPasien.setFocusable(false);
        tblPasien.setRowHeight(25);
        tblPasien.setSelectionBackground(new java.awt.Color(204, 255, 204));
        tblPasien.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tblPasien.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblPasien.getTableHeader().setResizingAllowed(false);
        tblPasien.getTableHeader().setReorderingAllowed(false);
        tblPasien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPasienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPasien);
        if (tblPasien.getColumnModel().getColumnCount() > 0) {
            tblPasien.getColumnModel().getColumn(0).setResizable(false);
            tblPasien.getColumnModel().getColumn(1).setResizable(false);
            tblPasien.getColumnModel().getColumn(2).setResizable(false);
            tblPasien.getColumnModel().getColumn(3).setResizable(false);
            tblPasien.getColumnModel().getColumn(4).setResizable(false);
            tblPasien.getColumnModel().getColumn(5).setResizable(false);
            tblPasien.getColumnModel().getColumn(6).setResizable(false);
            tblPasien.getColumnModel().getColumn(7).setResizable(false);
        }

        txtcari.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtcari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcariMouseClicked(evt);
            }
        });
        txtcari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcariKeyReleased(evt);
            }
        });

        btncari.setBackground(new java.awt.Color(113, 165, 93));
        btncari.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        btncari.setForeground(new java.awt.Color(51, 51, 51));
        btncari.setText("CARI");
        btncari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncariActionPerformed(evt);
            }
        });

        btnok.setBackground(new java.awt.Color(113, 165, 93));
        btnok.setFont(new java.awt.Font("Corbel", 1, 18)); // NOI18N
        btnok.setForeground(new java.awt.Color(51, 51, 51));
        btnok.setText("OK");
        btnok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnokActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("COCOMAT", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pilih Pasien");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btncari, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(344, 344, 344)
                        .addComponent(btnok, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncari))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnok, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jPanel1.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 830, 710));

        kGradientPanel2.setkEndColor(new java.awt.Color(0, 102, 102));
        kGradientPanel2.setkStartColor(new java.awt.Color(204, 255, 204));

        jLabel2.setFont(new java.awt.Font("COCOMAT", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pilih Tanggal");

        jDateChooser.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(147, 147, 147))
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(301, Short.MAX_VALUE))
        );

        jPanel1.add(kGradientPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 150, 550, 510));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1561, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    static public class HeaderColor extends DefaultTableCellRenderer{
        public HeaderColor(){
                setOpaque(true);
    }public Component getTableCellRendererComponent(JTable tblPasien, Object value, boolean selected, boolean focused, int row, int column){
        super.getTableCellRendererComponent(tblPasien,value,selected,focused,row,column);
                setBackground(new java.awt.Color(204, 255, 204));
                return this;
    }
    }
    private void tblPasienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPasienMouseClicked
        int i = tblPasien.getSelectedRow();
        TableModel model = tblPasien.getModel();
        txtcari.setText(model.getValueAt(i, 2).toString());
    }//GEN-LAST:event_tblPasienMouseClicked

    private void btncariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncariActionPerformed
        flag = 1;
        connection = Connector.ConnectDb();
        defaultTableModel.getDataVector().removeAllElements();
        defaultTableModel.fireTableDataChanged();
        String searchKey = txtcari.getText();
        String sql = "select Tanggal,id_pasien,Nama_Pasien,Usia,Jenis_Kelamin,Alamat,Nomor_Telepon,Penyakit from tbl_pasien where Nama_Pasien = '" + searchKey + "'";
        try {
            flag = 0;
            ps = connection.prepareStatement(sql);
            rs = ps.executeQuery();
            Object columnData[] = new Object[10];
            while (rs.next()) {
                flag = 1;
                columnData[0] = rs.getString("Tanggal");
                columnData[1] = rs.getString("id_pasien");
                columnData[2] = rs.getString("Nama_Pasien");
                columnData[3] = rs.getString("Usia");
                columnData[4] = rs.getString("Jenis_Kelamin");
                columnData[5] = rs.getString("Alamat");
                columnData[6] = rs.getString("Nomor_Telepon");
                columnData[7] = rs.getString("Penyakit");
                defaultTableModel.addRow(columnData);
            }
            if (flag == 0) {
                DefaultTableModel dtm = (DefaultTableModel) tblPasien.getModel();
                dtm.setRowCount(0);
                loadtable();
                JOptionPane.showMessageDialog(null, "Nama Tidak Ditemukan", "Warning",
                        JOptionPane.WARNING_MESSAGE);
            }            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btncariActionPerformed

    private void btnokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnokActionPerformed
        getfield();
        if (txtcari.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Cari Dan Pilih Pasien", "Warning",
                    JOptionPane.WARNING_MESSAGE);
        } else {

            int row = tblPasien.getSelectedRow();
            String pname = (tblPasien.getValueAt(row, 2).toString());
            connection = Connector.ConnectDb();

            try {
                String sql = "insert into tbl_perjanjian(dName,pName,Ruangan,Tanggal) values (?,?,?,?)";
                ps = connection.prepareStatement(sql);
                ps.setString(1, dName);
                ps.setString(2, pname);
                ps.setString(3, droom);
                ps.setString(4, dob);
                ps.execute();

                JOptionPane.showMessageDialog(null, "Pasien " + pname + " Membuat Perjanjian dengan Dokter " + dName + " Di Ruangan " + droom + "  Pada Tanggal  " + dob);
                int i = JOptionPane.showConfirmDialog(this, "Input Lagi ? ", "Confirm",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (i == JOptionPane.YES_OPTION) {
                    Choose_Doctor CD = new Choose_Doctor();
                    CD.setVisible(true);
                    dispose();

                } else if (i == JOptionPane.NO_OPTION) {
                    Receptionist_Activity RA = new Receptionist_Activity();
                    RA.setVisible(true);
                    dispose();
                }
            } catch (HeadlessException | SQLException e) {
                System.out.println("" + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnokActionPerformed

    private void txtcariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcariMouseClicked

    }//GEN-LAST:event_txtcariMouseClicked

    private void txtcariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyReleased
        if(txtcari.getText().equals("")){
        DefaultTableModel dtm = (DefaultTableModel) tblPasien.getModel();
        dtm.setRowCount(0);
        loadtable();  
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtcariKeyReleased

    private void loadtable() {

        DefaultTableModel dtm = (DefaultTableModel) tblPasien.getModel();

        connection = Connector.ConnectDb();
        try {
            sql = "select Tanggal,id_pasien,Nama_Pasien,Usia,Jenis_Kelamin,Alamat,Nomor_Telepon,Penyakit from tbl_pasien";

            st = connection.createStatement();
            rs = st.executeQuery(sql);
            while (rs.next()) {
                dtm.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)});
            }
        } catch (Exception e) {
            System.out.println("Error " + e.getMessage());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Choose_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Choose_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Choose_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Choose_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Choose_Patient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncari;
    private javax.swing.JButton btnok;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private javax.swing.JTable tblPasien;
    private javax.swing.JTextField txtcari;
    // End of variables declaration//GEN-END:variables

    private void getfield() {
        java.util.Date d = jDateChooser.getDate();
        if (d == null) {
            JOptionPane.showMessageDialog(null, "Pilih Tanggal", "Warning",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy/MM/dd");
            dob = Date_Format.format(jDateChooser.getDate());
        }
    }
}
